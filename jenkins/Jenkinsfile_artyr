pipeline {
    agent any
       parameters {
               string(
          			name: 'CODE_REPO',
          			defaultValue: 'git@github.com/TimurGalanin/Ansible.git',
          			description: 'CODE_REPO'
		            )
		 string(
			name: 'BRANCH',
			defaultValue: 'main',
			description: 'BRANCH'
		)


    }



    stages {
        stage('Stage 1') {
            steps {
script {


                         //checkout([$class: 'GitSCM', branches: [[name: "master"]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'ci/']], gitTool: 'Default', submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'shilo-av-ssh', url: "ssh://git@github.com:TimurGalanin/Ansible.git"]]])

                         sh 'pwd && ls -li ci'
                         DEPLOY_TYPE = 'BUILDONOPENSHIFT4'

                         withCredentials([sshUserPrivateKey(credentialsId: 'ssh-git',
                                                           keyFileVariable: 'JENKINS_PRIVATE_KEY', passphraseVariable: 'PASSPHRASE',
                                                            usernameVariable: 'USERNAME')]) {



                           // sh "echo ${JENKINS_PRIVATE_KEY} > ./.ssh_for_server"
                           // sh 'chmod 600 ./.ssh_for_server'



                         ansiblePlaybook extras: "--private-key ${JENKINS_PRIVATE_KEY} -vv -u root --extra-vars \" inventory_dir=\"${WORKSPACE}/ansible/inventories/dev/\"\" ",
                         installation: 'ansible29',
                         inventory: "ansible/inventories/dev/inventory",
                         playbook: "ansible/dev.yml"
                       }
                       }
            }
        }
    }
    post {
        success {
            println "WellDone"
            // sh "ifconfig"
            // sh "echo hello"
          //  archiveArtifacts allowEmptyArchive: true, artifacts: 'code/front2/dist/*.zip', fingerprint: true

        }
      }
}
